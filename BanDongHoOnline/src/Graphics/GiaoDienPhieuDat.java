/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Graphics;

import CONNECTION.DataConnection;
import CONNECTION.LoadData;
import Function.DigitsDocument;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Model.CT_PhieuDat;
import Model.DongHo;
import Model.KhachHang;
import Model.PhieuDat;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.DecodeHintType;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.Reader;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.util.EnumMap;
import java.util.Map;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.Timer;


/**
 *
 * @author Admin
 */
public class GiaoDienPhieuDat extends javax.swing.JFrame {

    private int link;
    /**
     * Creates new form PhieuDat
     */
    private DefaultTableModel myTable;
    private DefaultTableModel myTable1;
    private DefaultTableModel myTable2;
    private static Timer formatTimer;

    public GiaoDienPhieuDat() {
        initComponents();
        myTable = (DefaultTableModel) tblPhieuDat.getModel();
        myTable1 = (DefaultTableModel) tblCT_PhieuDat.getModel();

        showData();

        showData1();

        txtGia.setEnabled(false);
        txtMPD.setEnabled(false);
        txtHo.setEnabled(false);
        txtTen.setEnabled(false);
        txtSDT.setDocument(new DigitsDocument());
        txtSL.setDocument(new DigitsDocument());
    }

    private void showData() {
        new LoadData();
        myTable.setRowCount(0);
        int dem = 0;

        for (PhieuDat pd : Controller.controller.arrayListPhieuDat) {
            dem++;
            myTable.addRow(new Object[]{dem, pd.getMaPD(), pd.getMaKH(), pd.getHoKH(), pd.getTenKH(), pd.getDcKH(), pd.getSdtKH(), pd.getNgayDat(), pd.getNgayGiao()});

        }

    }

    private void showData1() {
        new LoadData();
        int dem1 = 0;
        myTable1.setRowCount(0);
        for (CT_PhieuDat ctpd : Controller.controller.arrayListCT_PhieuDat) {
            dem1++;
            myTable1.addRow(new Object[]{dem1, ctpd.getMaPD(), ctpd.getMaDH(), ctpd.getSoLuong(), ctpd.getGia()});
        }
    }

    private void showCTPD() {
        myTable2 = (DefaultTableModel) tblCT_PhieuDat.getModel();
        new LoadData();
        int x = tblPhieuDat.getSelectedRow();
        int dem2 = 0;
        myTable2.setRowCount(0);
        String n = (String) myTable.getValueAt(x, 1);
        for (CT_PhieuDat ctpd : Controller.controller.arrayListCT_PhieuDat) {
            dem2++;
            if (ctpd.getMaPD().equals(n)) {
                myTable2.addRow(new Object[]{dem2, ctpd.getMaPD(), ctpd.getMaDH(), ctpd.getSoLuong(), ctpd.getGia()});
            }
        }
    }

    private boolean check(String Ma) {
        for (PhieuDat pd : Controller.controller.arrayListPhieuDat) {
            if ((pd.getMaPD().trim().equals(Ma.trim()))) {
                return true;

            }

        }
        return false;
    }

    private boolean check1(String Ma) {
        for (DongHo dh : Controller.controller.arrayListDongHo) {
            if (dh.getMaDH().trim().equals(Ma.trim())) {
                return true;
            }

        }
        return false;
    }

    private boolean check3(String Ma) {
        for (KhachHang kh : Controller.controller.arrayListKhachHang) {
            if (kh.getMaKH().trim().equals(Ma.trim())) {
                return true;
            }

        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_Home = new javax.swing.JButton();
        pnl_PD = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPhieuDat = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtMPD = new javax.swing.JTextField();
        sdfs = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtHo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        dateDat = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        dateGiao = new com.toedter.calendar.JDateChooser();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnreset = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        TuNgay = new com.toedter.calendar.JDateChooser();
        DenNgay = new com.toedter.calendar.JDateChooser();
        jButton2 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        baoloi = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        pnl_CTPD = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMPD_CT = new javax.swing.JTextField();
        btnXoaCT = new javax.swing.JButton();
        btnSuaCT = new javax.swing.JButton();
        btnreset1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCT_PhieuDat = new javax.swing.JTable();
        txtMDH = new javax.swing.JTextField();
        txtSL = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnSuaCT1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DANH SÁCH PHIẾU ĐẶT");
        setResizable(false);

        btn_Home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Home-icon.png"))); // NOI18N
        btn_Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HomeActionPerformed(evt);
            }
        });

        pnl_PD.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnl_PD.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(47, 149, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PHIẾU ĐẶT");

        tblPhieuDat.setBackground(new java.awt.Color(247, 220, 104));
        tblPhieuDat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã phiếu đặt ", "Mã khách hàng", "Họ", "Tên", "Địa chỉ", "SDT", "Ngày đặt", "Ngày giao"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPhieuDat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblPhieuDatMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblPhieuDat);
        if (tblPhieuDat.getColumnModel().getColumnCount() > 0) {
            tblPhieuDat.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Mã PD:");

        txtMPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMPDActionPerformed(evt);
            }
        });

        sdfs.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        sdfs.setText("Mã KH:");

        txtMaKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaKHActionPerformed(evt);
            }
        });
        txtMaKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaKHKeyReleased(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("SDT:");

        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });
        txtSDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSDTKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Họ KH:");

        txtHo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Tên KH:");

        txtTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("DC:");

        txtDiaChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiaChiActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Ngày đặt:");

        dateDat.setDateFormatString("yyyy-MM-dd");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Ngày giao:");

        dateGiao.setDateFormatString("yyyy-MM-dd");

        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Button-Add-icon.png"))); // NOI18N
        btnThem.setText("Thêm ");
        btnThem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Button-Close-icon.png"))); // NOI18N
        btnXoa.setText("Xóa ");
        btnXoa.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Pen-Red-icon.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/search-icon.png"))); // NOI18N
        jButton1.setText("Ngày Đặt");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnreset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnreset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Reset-icon.png"))); // NOI18N
        btnreset.setText("Reset");
        btnreset.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setText("Từ ngày:");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setText("Đến ngày:");

        TuNgay.setDateFormatString("yyyy-MM-dd");

        DenNgay.setDateFormatString("yyyy-MM-dd");

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/search-icon.png"))); // NOI18N
        jButton2.setText("Ngày Giao");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setText("Tìm theo ngày giao");

        baoloi.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        baoloi.setForeground(new java.awt.Color(244, 108, 63));
        baoloi.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        baoloi.setText("Thông báo:");

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/no ok.png"))); // NOI18N
        jButton5.setText("Chưa Giao");
        jButton5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/ok-icon.png"))); // NOI18N
        jButton4.setText("Đã Giao");
        jButton4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_PDLayout = new javax.swing.GroupLayout(pnl_PD);
        pnl_PD.setLayout(pnl_PDLayout);
        pnl_PDLayout.setHorizontalGroup(
            pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_PDLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnl_PDLayout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(baoloi, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_PDLayout.createSequentialGroup()
                        .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(pnl_PDLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(27, 27, 27)
                                .addComponent(TuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnl_PDLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(18, 18, 18)
                                .addComponent(DenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnreset, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(106, 106, 106))
                    .addGroup(pnl_PDLayout.createSequentialGroup()
                        .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(dateDat, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_PDLayout.createSequentialGroup()
                                    .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnl_PDLayout.createSequentialGroup()
                                            .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(21, 21, 21))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_PDLayout.createSequentialGroup()
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                    .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtHo, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                            .addComponent(txtMPD)))))
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_PDLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSDT))
                            .addGroup(pnl_PDLayout.createSequentialGroup()
                                .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sdfs))
                                .addGap(4, 4, 4)
                                .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTen)
                                    .addComponent(txtMaKH)))
                            .addGroup(pnl_PDLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateGiao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        pnl_PDLayout.setVerticalGroup(
            pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_PDLayout.createSequentialGroup()
                .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnl_PDLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_PDLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnl_PDLayout.createSequentialGroup()
                                .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtMPD, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtHo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)))
                            .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnl_PDLayout.createSequentialGroup()
                                    .addGap(31, 31, 31)
                                    .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(sdfs)
                                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateDat, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateGiao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)
                        .addGap(8, 8, 8)
                        .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(TuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnreset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel17))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(baoloi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pnl_CTPD.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(47, 149, 153));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("CHI TIẾT PHIẾU ĐẶT");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Mã phiếu đặt:");

        txtMPD_CT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMPD_CTActionPerformed(evt);
            }
        });

        btnXoaCT.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoaCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Button-Close-icon.png"))); // NOI18N
        btnXoaCT.setText("Xóa ");
        btnXoaCT.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnXoaCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCTActionPerformed(evt);
            }
        });

        btnSuaCT.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSuaCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Pen-Red-icon.png"))); // NOI18N
        btnSuaCT.setText("Sửa");
        btnSuaCT.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSuaCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaCTActionPerformed(evt);
            }
        });

        btnreset1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnreset1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Reset-icon.png"))); // NOI18N
        btnreset1.setText("Reset");
        btnreset1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnreset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreset1ActionPerformed(evt);
            }
        });

        tblCT_PhieuDat.setBackground(new java.awt.Color(247, 220, 104));
        tblCT_PhieuDat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã phiếu đặt ", "Mã đồng hồ", "Số lượng", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Short.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCT_PhieuDat.setToolTipText("");
        tblCT_PhieuDat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblCT_PhieuDatMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblCT_PhieuDat);
        if (tblCT_PhieuDat.getColumnModel().getColumnCount() > 0) {
            tblCT_PhieuDat.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        txtSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSLActionPerformed(evt);
            }
        });
        txtSL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSLKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSLKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Mã đồng hồ:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Số lượng:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Đơn giá:");

        btnSuaCT1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSuaCT1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Pen-Red-icon.png"))); // NOI18N
        btnSuaCT1.setText("Quét mã");
        btnSuaCT1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSuaCT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaCT1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_CTPDLayout = new javax.swing.GroupLayout(pnl_CTPD);
        pnl_CTPD.setLayout(pnl_CTPDLayout);
        pnl_CTPDLayout.setHorizontalGroup(
            pnl_CTPDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_CTPDLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnl_CTPDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE))
                .addGroup(pnl_CTPDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_CTPDLayout.createSequentialGroup()
                        .addGroup(pnl_CTPDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_CTPDLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnl_CTPDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_CTPDLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel8)
                                .addGap(3, 3, 3)))
                        .addGap(8, 8, 8)
                        .addGroup(pnl_CTPDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtSL, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(txtMDH, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMPD_CT, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtGia)))
                    .addGroup(pnl_CTPDLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnXoaCT, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSuaCT, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnreset1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSuaCT1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_CTPDLayout.setVerticalGroup(
            pnl_CTPDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_CTPDLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(4, 4, 4)
                .addGroup(pnl_CTPDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnl_CTPDLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(pnl_CTPDLayout.createSequentialGroup()
                        .addGroup(pnl_CTPDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtMPD_CT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnl_CTPDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMDH, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnl_CTPDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSL, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_CTPDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnl_CTPDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnXoaCT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSuaCT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnreset1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSuaCT1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_Home)
                    .addComponent(pnl_PD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnl_CTPD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btn_Home)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnl_PD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_CTPD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (txtSDT.getText().length() != 10) {
            baoloi.setText("thông tin về số điện thoại không hợp lệ!");
            return;
        }
        if (txtDiaChi.getText().equals("") || txtSDT.getText().equals("") || txtMaKH.getText().equals("") || dateDat.getDate().equals("") || dateGiao.getDate().equals("")) {
            baoloi.setText("Vui lòng nhập đầy đủ thông tin phiếu đặt!");
        } else {
            int row = tblPhieuDat.getSelectedRow();
            for (PhieuDat pdhh : Controller.controller.arrayListPhieuDat) {
                if (pdhh.getMaKH().equals(txtMaKH.getText())) {
                    txtHo.setText(pdhh.getHoKH());
                    txtTen.setText(pdhh.getTenKH());
                }
            }
            int SL = Integer.parseInt(txtSL.getText());
            BigDecimal gia = new BigDecimal(txtGia.getText());
            PhieuDat pd = new PhieuDat(txtMPD.getText(), txtHo.getText(), txtTen.getText(), txtDiaChi.getText(), txtMaKH.getText(), txtSDT.getText(), dateDat.getDate(), dateGiao.getDate());
            CT_PhieuDat ctpd = new CT_PhieuDat(txtMPD.getText(),SL, gia, txtMDH.getText());
            if (tblPhieuDat.getSelectedRow() == -1) {
                for (PhieuDat pdh : Controller.controller.arrayListPhieuDat) {
                    if (pdh.getMaPD().equals(txtMPD.getText())) {
                        baoloi.setText("Phiếu đặt đã tồn tại");
                        return;
                    }
                }
                if (!check3(txtMaKH.getText())) {
                    baoloi.setText("Mã khách hàng không hợp lệ");
                    return;
                } else {
                    CONNECTION.InsertData.insertPhieuDat(pd,ctpd);
                }

                showData();

                tblPhieuDat.getSelectionModel().setSelectionInterval(tblPhieuDat.getRowCount() - 1, tblPhieuDat.getRowCount() - 1);

            } else {

                CONNECTION.UpdateData.updatePhieuDat(pd);

            }
            showData();
            showData1();
            tblPhieuDat.getSelectionModel().setSelectionInterval(row, row);
        }
        String x = "";
        txtMPD.setText(x);
        txtMaKH.setText(x);
        txtSDT.setText(x);
        txtHo.setText(x);
        txtTen.setText(x);
        txtDiaChi.setText(x);
        dateDat.setDate(null);
        dateGiao.setDate(null);
        btnThem.setEnabled(true);
        txtHo.setEnabled(true);
        txtTen.setEnabled(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemActionPerformed

    private void txtTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenActionPerformed

    private void txtMaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaKHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaKHActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if (tblPhieuDat.getSelectedRow() == -1) {
            baoloi.setText("Vui lòng chọn phiếu đặt");
        } else {
            int confirmed = JOptionPane.showConfirmDialog(null,
                    "Xác Nhận Xóa Phiếu Đặt?", "Xác nhận", JOptionPane.YES_NO_OPTION);

            if (confirmed == JOptionPane.YES_OPTION) {
                System.out.println(tblPhieuDat.getValueAt(tblPhieuDat.getSelectedRow(), 1));
                CONNECTION.DeleteData.deletePhieuDat((String) tblPhieuDat.getValueAt(tblPhieuDat.getSelectedRow(), 1));
                showData();
                showData1();
            }
        }
        String x = "";
        txtMPD.setText(x);
        txtMaKH.setText(x);
        txtSDT.setText(x);
        txtHo.setText(x);
        txtTen.setText(x);
        txtDiaChi.setText(x);
        dateDat.setDate(null);
        dateGiao.setDate(null);
        btnThem.setEnabled(true);
        txtHo.setEnabled(true);
        txtTen.setEnabled(true);
        showData();// TODO add your handling code here:
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnXoaCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCTActionPerformed
        if (tblCT_PhieuDat.getSelectedRow() == -1) {
            baoloi.setText("Vui lòng chọn phiếu đặt");
        } else {
            int confirmed = JOptionPane.showConfirmDialog(null,
                    "Xác Nhận Xóa Phiếu Đặt?", "Xác nhận", JOptionPane.YES_NO_OPTION);
            int row = tblCT_PhieuDat.getSelectedRow();
            int x = (int) tblCT_PhieuDat.getValueAt(row, 3);
            if (confirmed == JOptionPane.YES_OPTION) {
                for (DongHo dh : Controller.controller.arrayListDongHo) {
                    if (dh.getMaDH().equals(txtMDH.getText())) {
                        dh.setSLTon(dh.getSLTon() + x);

                    }
                    CONNECTION.UpdateData.updateDongHo(dh);
                }
                System.out.println(tblCT_PhieuDat.getValueAt(tblCT_PhieuDat.getSelectedRow(), 1));

                CONNECTION.DeleteData.deleteCT_PhieuDat((String) tblCT_PhieuDat.getValueAt(tblCT_PhieuDat.getSelectedRow(), 1), (String) tblCT_PhieuDat.getValueAt(tblCT_PhieuDat.getSelectedRow(), 2));
                showData1();
            }
        }
        String x = "";
        txtMPD_CT.setText(x);
        txtMDH.setText(x);
        txtSL.setText(x);
        txtGia.setText(x);
        txtMPD_CT.setEnabled(true);
        txtGia.setEnabled(false);
        showData1();// TODO add your handling code here:
    }//GEN-LAST:event_btnXoaCTActionPerformed

    private void tblPhieuDatMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuDatMousePressed
        btnThem.setEnabled(false);
        txtMPD.setEnabled(false);
        txtHo.setEnabled(false);
        txtTen.setEnabled(false);
        baoloi.setText("");// TODO add your handling code here:
        int row = tblPhieuDat.getSelectedRow();
        txtMPD.setText((String) tblPhieuDat.getValueAt(row, 1));
        txtMaKH.setText((String) tblPhieuDat.getValueAt(row, 2));
        txtHo.setText((String) tblPhieuDat.getValueAt(row, 3));
        txtTen.setText((String) tblPhieuDat.getValueAt(row, 4));
        txtDiaChi.setText((String) tblPhieuDat.getValueAt(row, 5));
        txtSDT.setText((String) tblPhieuDat.getValueAt(row, 6));
        String datebd = tblPhieuDat.getValueAt(tblPhieuDat.getSelectedRow(), 7).toString();
        String datekt = tblPhieuDat.getValueAt(tblPhieuDat.getSelectedRow(), 8).toString();
        datebd = datebd.substring(8, 10) + "/" + datebd.substring(5, 7) + "/" + datebd.substring(0, 4);
        datekt = datekt.substring(8, 10) + "/" + datekt.substring(5, 7) + "/" + datekt.substring(0, 4);

        try {
            java.util.Date datetmp = new SimpleDateFormat("dd/MM/yyyy").parse(datebd);
            dateDat.setDate(datetmp);
            java.util.Date datetmp1 = new SimpleDateFormat("dd/MM/yyyy").parse(datekt);
            dateGiao.setDate(datetmp1);
        } catch (ParseException ex) {
            Logger.getLogger(GiaoDienPhieuDat.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (evt.getClickCount() == 2) {
            tblCT_PhieuDat.setDefaultEditor(Object.class, null);
            //jTable1.setSelectionBackground(Color.RED);
            tblCT_PhieuDat.setSelectionMode(0);
            showCTPD();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPhieuDatMousePressed

    private void tblCT_PhieuDatMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCT_PhieuDatMousePressed
        txtMPD_CT.setEnabled(false);
        txtGia.setEnabled(false);

        baoloi.setText("");// TODO add your handling code here:
        int row = tblCT_PhieuDat.getSelectedRow();
        txtMPD_CT.setText((String) tblCT_PhieuDat.getValueAt(row, 1));
        txtMDH.setText((String) tblCT_PhieuDat.getValueAt(row, 2));
        txtSL.setText(tblCT_PhieuDat.getValueAt(row, 3).toString());
        txtGia.setText(tblCT_PhieuDat.getValueAt(row, 4).toString());
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCT_PhieuDatMousePressed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (txtMPD.getText().equals("") || txtDiaChi.getText().equals("") || txtSDT.getText().equals("") || txtMaKH.getText().equals("") || dateDat.getDate().equals("") || dateGiao.getDate().equals("")) {
            baoloi.setText("Vui lòng nhập đầy đủ thông tin phiếu đặt!");
        } else {
            int row = tblPhieuDat.getSelectedRow();
            for (PhieuDat pdhh : Controller.controller.arrayListPhieuDat) {
                if (pdhh.getMaKH().equals(txtMaKH.getText())) {
                    txtHo.setText(pdhh.getHoKH());
                    txtTen.setText(pdhh.getTenKH());
                }
            }
            PhieuDat pd = new PhieuDat(txtMPD.getText(), txtHo.getText(), txtTen.getText(), txtDiaChi.getText(), txtMaKH.getText(), txtSDT.getText(), dateDat.getDate(), dateGiao.getDate());

            if (!check3(txtMaKH.getText())) {
                baoloi.setText("Mã khách hàng không hợp lệ");
                return;
            } else {
                CONNECTION.UpdateData.updatePhieuDat(pd);
            }

            showData();
            tblPhieuDat.getSelectionModel().setSelectionInterval(row, row);
        }
        String x = "";
        txtMPD.setText(x);
        txtMaKH.setText(x);
        txtSDT.setText(x);
        txtHo.setText(x);
        txtTen.setText(x);
        txtDiaChi.setText(x);
        dateDat.setDate(null);
        dateGiao.setDate(null);
        btnThem.setEnabled(true);
        txtHo.setEnabled(true);
        txtTen.setEnabled(true);
        showData();

// TODO add your handling code here:
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnSuaCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaCTActionPerformed
        if (txtMPD_CT.getText().equals("") || txtMDH.getText().equals("") || txtSL.getText().equals("")) {
            baoloi.setText("Vui lòng nhập đầy đủ thông tin chi tiết phiếu đặt!");
        } else {
            int row = tblCT_PhieuDat.getSelectedRow();
            int SL = Integer.parseInt(txtSL.getText());
            BigDecimal Gia, gia1;
            if (!check1(txtMDH.getText())) {
                baoloi.setText("Mã đồng hồ không hợp lệ");

            }
            String mdh = (String) txtMDH.getText();
            Gia = new BigDecimal(txtGia.getText());
            int x = (int) tblCT_PhieuDat.getValueAt(row, 3);
            int y = Integer.parseInt(txtSL.getText());
            CT_PhieuDat ctpd = new CT_PhieuDat(txtMPD_CT.getText(), SL, Gia, mdh);

            if (!check(txtMPD_CT.getText())) {
                baoloi.setText("Mã phiếu đặt không hợp lệ");
                return;
            } else if (!check1(txtMDH.getText())) {
                baoloi.setText("Mã đồng hồ không hợp lệ");
                return;
            } else {
                for (DongHo dh : Controller.controller.arrayListDongHo) {
                    if (dh.getMaDH().trim().equals(txtMDH.getText().trim())) {
                        dh.setSLTon(dh.getSLTon() + x - y);
                    }
                    CONNECTION.UpdateData.updateDongHo(dh);

                }
            }

            CONNECTION.UpdateData.updateCT_PhieuDat1(ctpd);

            tblCT_PhieuDat.getSelectionModel().setSelectionInterval(row, row);
        }
        String x = "";
        txtMPD_CT.setText(x);
        txtMDH.setText(x);
        txtSL.setText(x);
        txtGia.setText(x);
        txtMPD_CT.setEnabled(true);
        txtGia.setEnabled(false);
        showData1();

    }//GEN-LAST:event_btnSuaCTActionPerformed
    public void showTheoNgayDat(String d1, String d2) {

        DataConnection.createStatement();
        try {
            String sql = ("select * from dbo.PhieuDat where NgayDat between ? and ?");
            PreparedStatement ps = DataConnection.connection.prepareStatement(sql);
            ps.setString(1, d1);
            ps.setString(2, d2);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel mode = (DefaultTableModel) tblPhieuDat.getModel();
            Object[] row;
            int dem = 1;
            while (rs.next()) {
                row = new Object[9];
                row[0] = dem++;
                row[1] = rs.getString("MaPD");
                row[2] = rs.getString("HoKH");
                row[3] = rs.getString("TenKH");
                row[4] = rs.getString("DCKH");
                row[5] = rs.getString("MaKH");
                row[6] = rs.getString("SDTKH");
                row[7] = rs.getDate("NgayDat");
                row[8] = rs.getDate("NgayGiao");
                mode.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienPhieuDat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void showTheoNgayGiao(String d1, String d2) {

        DataConnection.createStatement();
        try {
            String sql = ("select * from dbo.PhieuDat where NgayGiao between ? and ?");
            PreparedStatement ps = DataConnection.connection.prepareStatement(sql);
            ps.setString(1, d1);
            ps.setString(2, d2);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel mode = (DefaultTableModel) tblPhieuDat.getModel();
            Object[] row;
            int dem = 1;
            while (rs.next()) {
                row = new Object[9];
                row[0] = dem++;
                row[1] = rs.getString("MaPD");
                row[2] = rs.getString("HoKH");
                row[3] = rs.getString("TenKH");
                row[4] = rs.getString("DCKH");
                row[5] = rs.getString("MaKH");
                row[6] = rs.getString("SDTKH");
                row[7] = rs.getDate("NgayDat");
                row[8] = rs.getDate("NgayGiao");
                mode.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienPhieuDat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        tblPhieuDat.setModel(new DefaultTableModel(null, new Object[]{"STT", "Mã phiếu đặt", "Mã khách hàng", "Họ", "Tên", "Địa chỉ", "SDT", "Ngày đặt", "Ngày giao"}));
        try {

            SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
            String jdate = date.format(TuNgay.getDate());
            String jdate1 = date.format(DenNgay.getDate());
            showTheoNgayDat(jdate, jdate1);

        } catch (Exception ex) {

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HomeActionPerformed
        Home home = new Home();
        home.setLocationRelativeTo(null);
        home.setVisible(true);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btn_HomeActionPerformed

    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        String x = "";
        txtMPD.setText(x);
        txtMaKH.setText(x);
        txtSDT.setText(x);
        txtDiaChi.setText(x);
        dateDat.setDate(null);
        dateGiao.setDate(null);
        btnThem.setEnabled(true);
        txtHo.setEnabled(true);
        txtTen.setEnabled(true);
        tblPhieuDat.setModel(myTable);
        TuNgay.setDate(null);
        DenNgay.setDate(null);
// TODO add your handling code here:
    }//GEN-LAST:event_btnresetActionPerformed

    private void btnreset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreset1ActionPerformed
        String x = "";
        txtMPD_CT.setText(x);
        txtMDH.setText(x);
        txtSL.setText(x);
        txtGia.setText(x);
        txtMPD_CT.setEnabled(true);
        txtGia.setEnabled(false);

        showData1();

        // TODO add your handling code here:
    }//GEN-LAST:event_btnreset1ActionPerformed

    private void txtDiaChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiaChiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiaChiActionPerformed

    private void txtHoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSDTActionPerformed

    private void txtSLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSLActionPerformed

    private void txtSDTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyPressed
        String number = txtSDT.getText();
        int length = number.length();
        if (length < 10) {
            txtSDT.setEditable(true);
        } else {
            txtSDT.setEditable(false);

            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                txtSDT.setEditable(true);
            } else {
                txtSDT.setEditable(false);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtSDTKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        tblPhieuDat.setModel(new DefaultTableModel(null, new Object[]{"STT", "Mã phiếu đặt", "Mã khách hàng", "Họ", "Tên", "Địa chỉ", "SDT", "Ngày đặt", "Ngày giao"}));
        try {
            SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
            String jdate = date.format(TuNgay.getDate());
            String jdate1 = date.format(DenNgay.getDate());
            showTheoNgayGiao(jdate, jdate1);
        } catch (Exception ex) {

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    public void showPDChuaGiao(String d1) {
        DataConnection.createStatement();
        try {
            String sql = ("select * from dbo.PhieuDat where NgayGiao > ?");
            PreparedStatement ps = DataConnection.connection.prepareStatement(sql);
            ps.setString(1, d1);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel mode = (DefaultTableModel) tblPhieuDat.getModel();
            Object[] row;
            int dem = 1;
            while (rs.next()) {
                row = new Object[9];
                row[0] = dem++;
                row[1] = rs.getString("MaPD");
                row[2] = rs.getString("HoKH");
                row[3] = rs.getString("TenKH");
                row[4] = rs.getString("DCKH");
                row[5] = rs.getString("MaKH");
                row[6] = rs.getString("SDTKH");
                row[7] = rs.getDate("NgayDat");
                row[8] = rs.getDate("NgayGiao");
                mode.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienPhieuDat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        long millis = System.currentTimeMillis();
        java.sql.Date date = new java.sql.Date(millis);
        String time = date.toString();
        tblPhieuDat.setModel(new DefaultTableModel(null, new Object[]{"STT", "Mã phiếu đặt", "Mã khách hàng", "Họ", "Tên", "Địa chỉ", "SDT", "Ngày đặt", "Ngày giao"}));
        try {
            showPDChuaGiao(time);
        } catch (Exception ex) {
            Logger.getLogger(GiaoDienPhieuDat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    public void showPDDaGiao(String d1) {
        DataConnection.createStatement();
        try {
            String sql = ("select * from dbo.PhieuDat where NgayGiao < ?");
            PreparedStatement ps = DataConnection.connection.prepareStatement(sql);
            ps.setString(1, d1);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel mode = (DefaultTableModel) tblPhieuDat.getModel();
            Object[] row;
            int dem = 1;
            while (rs.next()) {
                row = new Object[9];
                row[0] = dem++;
                row[1] = rs.getString("MaPD");
                row[2] = rs.getString("HoKH");
                row[3] = rs.getString("TenKH");
                row[4] = rs.getString("DCKH");
                row[5] = rs.getString("MaKH");
                row[6] = rs.getString("SDTKH");
                row[7] = rs.getDate("NgayDat");
                row[8] = rs.getDate("NgayGiao");
                mode.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienPhieuDat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        long millis = System.currentTimeMillis();
        java.sql.Date date = new java.sql.Date(millis);
        String time = date.toString();
        tblPhieuDat.setModel(new DefaultTableModel(null, new Object[]{"STT", "Mã phiếu đặt", "Mã khách hàng", "Họ", "Tên", "Địa chỉ", "SDT", "Ngày đặt", "Ngày giao"}));
        try {

            showPDDaGiao(time);

        } catch (Exception ex) {
            Logger.getLogger(GiaoDienPhieuDat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void getPrice(String MaDH, int SL) {
        BigDecimal Gia, gia1;
        for (DongHo dh : Controller.controller.arrayListDongHo) {
            BigDecimal SLa = new BigDecimal(SL);
            if (dh.getMaDH().trim().equals(txtMDH.getText().trim())) {
                gia1 = dh.getGia();
                Gia = gia1.multiply(SLa);
                String G = Gia.toString();
                txtGia.setText(G);

            }
        }
    }

    private void startFormatTimer(String MaDH, int SL) {
        if (formatTimer != null && formatTimer.isRunning()) {
            formatTimer.restart();
        } else {
            formatTimer = new Timer(100, e -> getPrice(MaDH, SL));
            formatTimer.setRepeats(false);
            formatTimer.start();
        }
    }

    private void txtSLKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSLKeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_txtSLKeyPressed

    private void txtSLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSLKeyReleased
        if (!txtSL.getText().equals("")) {
            int SL = Integer.parseInt(txtSL.getText());
            startFormatTimer(txtMDH.getText(), SL);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSLKeyReleased

    private void txtMPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMPDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMPDActionPerformed

    private void txtMaKHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaKHKeyReleased
        for (KhachHang kh : Controller.controller.arrayListKhachHang) {
            if (txtMaKH.getText().trim().equals(kh.getMaKH().trim())) {
                txtHo.setText(kh.getHoKH());
                txtTen.setText(kh.getTenKH());
            } else {
                System.out.println("loi");
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaKHKeyReleased
private void chooseImage() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("E:\\LTHDT\\BanDongHo\\BanDongHoOnline\\src\\MaQR"));
        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();

            try {
                BufferedImage image = ImageIO.read(selectedFile);

                LuminanceSource source = new BufferedImageLuminanceSource(image);
                BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

                Map<DecodeHintType, Object> hints = new EnumMap<DecodeHintType, Object>(DecodeHintType.class);
                hints.put(DecodeHintType.TRY_HARDER, Boolean.TRUE);

                Reader reader = new MultiFormatReader();
                Result scanResult = reader.decode(bitmap, hints);

                String barcodeText = scanResult.getText();
                txtMDH.setText( barcodeText);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }
    private void txtMPD_CTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMPD_CTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMPD_CTActionPerformed

    private void btnSuaCT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaCT1ActionPerformed
chooseImage();                // TODO add your handling code here:
    }//GEN-LAST:event_btnSuaCT1ActionPerformed

    // rest of mousePressed goes here
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GiaoDienPhieuDat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GiaoDienPhieuDat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GiaoDienPhieuDat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GiaoDienPhieuDat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GiaoDienPhieuDat PD = new GiaoDienPhieuDat();
                PD.setLocationRelativeTo(null);
                PD.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DenNgay;
    private com.toedter.calendar.JDateChooser TuNgay;
    private javax.swing.JLabel baoloi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSuaCT;
    private javax.swing.JButton btnSuaCT1;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaCT;
    private javax.swing.JButton btn_Home;
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnreset1;
    private com.toedter.calendar.JDateChooser dateDat;
    private com.toedter.calendar.JDateChooser dateGiao;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnl_CTPD;
    private javax.swing.JPanel pnl_PD;
    private javax.swing.JLabel sdfs;
    public javax.swing.JTable tblCT_PhieuDat;
    private javax.swing.JTable tblPhieuDat;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtHo;
    private javax.swing.JTextField txtMDH;
    private javax.swing.JTextField txtMPD;
    private javax.swing.JTextField txtMPD_CT;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtSDT;
    public javax.swing.JTextField txtSL;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
}
